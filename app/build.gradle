plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    namespace 'com.alican.mvvm_starter'
    compileSdk 33

    defaultConfig {
        applicationId "com.alican.mvvm_starter"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.3.1"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_9
        targetCompatibility JavaVersion.VERSION_1_9
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding  true
        viewBinding true
        compose true
    }
}

dependencies {

    def arch_version = "2.1.0"

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-dynamic-links-ktx:21.1.0'
    implementation 'androidx.browser:browser:1.5.0'
    implementation 'androidx.paging:paging-common-ktx:3.1.1'
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Test
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation 'junit:junit:4.13.1'
    testImplementation "io.mockk:mockk:1.10.2"
    testImplementation "io.mockk:mockk-android:1.9.3"
    testImplementation "androidx.test:core:1.3.0"
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation "org.assertj:assertj-core:3.13.2"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'

    //UI Test
    androidTestImplementation "androidx.test:core:1.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "org.robolectric:robolectric:4.3.1"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_version"
    kaptAndroidTest 'androidx.databinding:databinding-compiler:4.1.1'
    // hilt
    implementation "com.google.dagger:hilt-android:2.44.2"
    kapt "com.google.dagger:hilt-compiler:2.44.2"

    // networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    // Image Loading
    implementation "io.coil-kt:coil:2.2.2"

    // Lotie image
    implementation 'com.airbnb.android:lottie:5.2.0'

    // Coroutine and Lifecycle
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"


    // Moshi
    def moshiVersion = "1.13.0"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"



    // Sticky Tab
    implementation 'com.github.amarjain07:StickyScrollView:1.0.3'


    // Reactive Network
    def reactiveNetworkVersion = '3.0.8'
    implementation "com.github.pwittchen:reactivenetwork-rx2:$reactiveNetworkVersion"


    // Generic Utils
    implementation "com.blankj:utilcodex:1.30.6"


    // Dot Indicator
    implementation 'com.github.msayan:dotsindicator:4.0.0'



    // Glide
    def glideVersion = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    kapt "com.github.bumptech.glide:annotations:$glideVersion"

    // Coil

    implementation "dev.chrisbanes.accompanist:accompanist-coil:0.6.1"


    // Room
    implementation "androidx.room:room-runtime:2.5.0"
    kapt "androidx.room:room-compiler:2.5.0"
    implementation "androidx.room:room-ktx:2.5.0"
    implementation "androidx.room:room-paging:2.5.0"

    // Compose
    def composeBom = platform('androidx.compose:compose-bom:2023.04.01')
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // or Material Design 2
    implementation 'androidx.compose.material:material'
    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.7.2'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata:1.5.0-beta02'
    // Optional - Integration with RxJava
    implementation 'androidx.compose.runtime:runtime-rxjava2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1.'
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.1"
    implementation "androidx.navigation:navigation-compose:2.6.0"


    implementation "androidx.paging:paging-compose:1.0.0-alpha14"


    implementation("androidx.navigation:navigation-compose:2.6.0")
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    implementation "androidx.window:window:1.1.0"
    implementation "androidx.compose.material3:material3-window-size-class:1.1.0"
    implementation("com.google.accompanist:accompanist-adaptive:0.26.2-beta")
    implementation("io.coil-kt:coil-compose:2.4.0")

}